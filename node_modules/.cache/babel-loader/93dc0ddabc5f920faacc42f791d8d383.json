{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharanya.banerjee\\\\Documents\\\\HTML\\\\React-Online-Tutor-Application-main\\\\Online-Tutor-Application\\\\src\\\\components\\\\PrivateRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Route } from \"react-router-dom\";\nimport { useAuth } from \"./contexts/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    path,\n    ...rest\n  } = _ref;\n  const {\n    token\n  } = useAuth();\n  return token ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    path: path\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    state: {\n      from: path\n    },\n    replace: true,\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/sharanya.banerjee/Documents/HTML/React-Online-Tutor-Application-main/Online-Tutor-Application/src/components/PrivateRoute.jsx"],"names":["Navigate","Route","useAuth","PrivateRoute","path","rest","token","from"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAsB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,OAAO,EAAzB;AAEA,SAAOI,KAAK,gBACV,QAAC,KAAD,OAAWD,IAAX;AAAiB,IAAA,IAAI,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,UADU,gBAGV,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAEH;AAAR,KAAjB;AAAiC,IAAA,OAAO,MAAxC;AAAyC,IAAA,EAAE,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CARD;;GAAMD,Y;UACcD,O;;;KADdC,Y;AAUN,eAAeA,YAAf","sourcesContent":["import { Navigate, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"./contexts/AuthProvider\";\r\n\r\nconst PrivateRoute = ({ path, ...rest }) => {\r\n  const { token } = useAuth();\r\n\r\n  return token ? (\r\n    <Route {...rest} path={path} />\r\n  ) : (\r\n    <Navigate state={{ from: path }} replace to=\"/\" />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}