{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharanya.banerjee\\\\Documents\\\\HTML\\\\React-Online-Tutor-Application-main\\\\Online-Tutor-Application\\\\src\\\\context\\\\AuthProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport * as authApi from \"../api/auth\"; // import * as userApi from \"../api/user\";\n\nimport { setupAuthExceptionHandler, setupAuthHeader } from \"../utils/helper\"; // import showToast from \"../utils/showToast\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = _ref => {\n  _s();\n\n  var _localStorage;\n\n  let {\n    children\n  } = _ref;\n  const token = JSON.parse((_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.getItem(\"__auth_token\")) || null; //   const user = JSON.parse(localStorage?.getItem(\"__auth_user\")) || null;\n  //   const [isUserLoading, setUserLoading] = useState(false);\n\n  const [tokenExpiry, setTokenExpiry] = useState(null);\n  const navigate = useNavigate();\n  token && setupAuthHeader(token);\n  useEffect(() => {\n    setupAuthExceptionHandler(signout, navigate);\n  }, []);\n  useEffect(() => {\n    if (token) {\n      try {\n        // setUserLoading(true);\n        const decodedToken = jwt_decode(token);\n        setTokenExpiry(decodedToken.exp);\n\n        if (decodedToken.exp < Date.now() / 1000) {\n          throw new Error(\"Session Expired\");\n        }\n      } catch (err) {\n        alert(`${err.message}\\nPlease sign-in again`);\n        signout();\n      } finally {//setUserLoading(false);\n      }\n    }\n  }, [token]);\n\n  const getToken = () => {\n    if (tokenExpiry && tokenExpiry < Date.now() / 1000) {\n      alert(`Session Expired\\nPlease sign-in again`);\n      signout();\n      navigate(\"/\");\n    }\n\n    return token;\n  };\n\n  const signup = async _ref2 => {\n    let {\n      username,\n      email,\n      password\n    } = _ref2;\n\n    try {\n      await authApi.signup(username, email, password);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const signin = async _ref3 => {\n    let {\n      email,\n      password\n    } = _ref3;\n\n    try {\n      const response = await authApi.signin(email, password);\n\n      if (response.status === \"SUCCESS\") {\n        var _localStorage2;\n\n        // localStorage?.setItem(\n        //   \"__auth_user\",\n        //   JSON.stringify(response.data.user)\n        // );\n        (_localStorage2 = localStorage) === null || _localStorage2 === void 0 ? void 0 : _localStorage2.setItem(\"__auth_token\", JSON.stringify(response.data.token));\n        setupAuthHeader(response.data.token);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const signout = () => {\n    localStorage.removeItem(\"__auth_token\");\n    localStorage.removeItem(\"__auth_user\");\n    setTokenExpiry(null);\n    setupAuthHeader(null);\n  }; //   const updateUser = async (emailId) => {\n  //     try {\n  //       setUserLoading(true);\n  //       const response = await userApi.updateUserById(user.id, emailId);\n  //       if (response.status === \"SUCCESS\") {\n  //         localStorage?.setItem(\"__auth_user\", JSON.stringify(response.data));\n  //         setUserLoading(false);\n  //         showToast(\"Email updated successfully\");\n  //       }\n  //     } catch (err) {\n  //       alert(err.message);\n  //     }\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      // isUserLoading,\n      // user,\n      token: getToken(),\n      signup,\n      signin,\n      signout // changePassword,\n      // updateUser,\n\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"XJ5Xsw2zmk0ffYSZ4WRC+5iD+Y4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/sharanya.banerjee/Documents/HTML/React-Online-Tutor-Application-main/Online-Tutor-Application/src/context/AuthProvider.jsx"],"names":["createContext","useContext","useEffect","useState","useNavigate","jwtDecode","authApi","setupAuthExceptionHandler","setupAuthHeader","AuthContext","AuthProvider","children","token","JSON","parse","localStorage","getItem","tokenExpiry","setTokenExpiry","navigate","signout","decodedToken","jwt_decode","exp","Date","now","Error","err","alert","message","getToken","signup","username","email","password","signin","response","status","setItem","stringify","data","removeItem","useAuth"],"mappings":"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","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {jwtDecode} from \"jwt-decode\";\r\nimport * as authApi from \"../api/auth\";\r\n// import * as userApi from \"../api/user\";\r\nimport { setupAuthExceptionHandler, setupAuthHeader } from \"../utils/helper\";\r\n// import showToast from \"../utils/showToast\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const token = JSON.parse(localStorage?.getItem(\"__auth_token\")) || null;\r\n//   const user = JSON.parse(localStorage?.getItem(\"__auth_user\")) || null;\r\n//   const [isUserLoading, setUserLoading] = useState(false);\r\n  const [tokenExpiry, setTokenExpiry] = useState(null);\r\n  const navigate = useNavigate();\r\n  token && setupAuthHeader(token);\r\n\r\n  useEffect(() => {\r\n    setupAuthExceptionHandler(signout, navigate);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      try {\r\n        // setUserLoading(true);\r\n        const decodedToken = jwt_decode(token);\r\n        setTokenExpiry(decodedToken.exp);\r\n        if (decodedToken.exp < Date.now() / 1000) {\r\n          throw new Error(\"Session Expired\");\r\n        }\r\n      } catch (err) {\r\n        alert(`${err.message}\\nPlease sign-in again`);\r\n        signout();\r\n      } finally {\r\n        //setUserLoading(false);\r\n      }\r\n    }\r\n  }, [token]);\r\n\r\n  const getToken = () => {\r\n    if (tokenExpiry && tokenExpiry < Date.now() / 1000) {\r\n      alert(`Session Expired\\nPlease sign-in again`);\r\n      signout();\r\n      navigate(\"/\");\r\n    }\r\n    return token;\r\n  };\r\n\r\n  const signup = async ({ username, email, password }) => {\r\n    try {\r\n      await authApi.signup(username, email, password);\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const signin = async ({ email, password }) => {\r\n    try {\r\n      const response = await authApi.signin(email, password);\r\n      if (response.status === \"SUCCESS\") {\r\n        // localStorage?.setItem(\r\n        //   \"__auth_user\",\r\n        //   JSON.stringify(response.data.user)\r\n        // );\r\n        localStorage?.setItem(\r\n          \"__auth_token\",\r\n          JSON.stringify(response.data.token)\r\n        );\r\n        setupAuthHeader(response.data.token);\r\n      }\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const signout = () => {\r\n    localStorage.removeItem(\"__auth_token\");\r\n    localStorage.removeItem(\"__auth_user\");\r\n    setTokenExpiry(null);\r\n    setupAuthHeader(null);\r\n  };\r\n\r\n  \r\n\r\n//   const updateUser = async (emailId) => {\r\n//     try {\r\n//       setUserLoading(true);\r\n//       const response = await userApi.updateUserById(user.id, emailId);\r\n//       if (response.status === \"SUCCESS\") {\r\n//         localStorage?.setItem(\"__auth_user\", JSON.stringify(response.data));\r\n//         setUserLoading(false);\r\n//         showToast(\"Email updated successfully\");\r\n//       }\r\n//     } catch (err) {\r\n//       alert(err.message);\r\n//     }\r\n//   };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        // isUserLoading,\r\n        // user,\r\n        token: getToken(),\r\n        signup,\r\n        signin,\r\n        signout,\r\n        // changePassword,\r\n        // updateUser,\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };"]},"metadata":{},"sourceType":"module"}