{"ast":null,"code":"import axios from \"axios\";\n\nconst setupAuthHeader = token => {\n  if (token) {\n    return axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  delete axios.defaults.headers.common[\"Authorization\"];\n};\n\nconst setupAuthExceptionHandler = (logoutUser, navigate) => {\n  const UNAUTHORIZED = 401;\n  axios.interceptors.response.use(response => response, error => {\n    var _error$response;\n\n    if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === UNAUTHORIZED) {\n      logoutUser();\n      navigate(\"/\");\n    }\n\n    return Promise.reject(error);\n  });\n};\n\nexport { setupAuthHeader, setupAuthExceptionHandler };","map":{"version":3,"sources":["C:/Users/sharanya.banerjee/Documents/HTML/React-Online-Tutor-Application-main/Online-Tutor-Application/src/utils/helper.js"],"names":["axios","setupAuthHeader","token","defaults","headers","common","setupAuthExceptionHandler","logoutUser","navigate","UNAUTHORIZED","interceptors","response","use","error","status","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,MAAIA,KAAJ,EAAW;AACT,WAAQF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASH,KAAM,EAAzE;AACD;;AACD,SAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD,CALD;;AAOA,MAAMC,yBAAyB,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC1D,QAAMC,YAAY,GAAG,GAArB;AACAT,EAAAA,KAAK,CAACU,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACGD,QAAD,IAAcA,QADhB,EAEGE,KAAD,IAAW;AAAA;;AACT,QAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEF,QAAP,oEAAiBG,MAAjB,MAA4BL,YAAhC,EAA8C;AAC5CF,MAAAA,UAAU;AACVC,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;;AACD,WAAOO,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,GARH;AAUD,CAZD;;AAcA,SAASZ,eAAT,EAA0BK,yBAA1B","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setupAuthHeader = (token) => {\r\n  if (token) {\r\n    return (axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`);\r\n  }\r\n  delete axios.defaults.headers.common[\"Authorization\"];\r\n};\r\n\r\nconst setupAuthExceptionHandler = (logoutUser, navigate) => {\r\n  const UNAUTHORIZED = 401;\r\n  axios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error?.response?.status === UNAUTHORIZED) {\r\n        logoutUser();\r\n        navigate(\"/\");\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport { setupAuthHeader, setupAuthExceptionHandler };"]},"metadata":{},"sourceType":"module"}