{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharanya.banerjee\\\\Documents\\\\HTML\\\\React-Online-Tutor-Application-main\\\\Online-Tutor-Application\\\\src\\\\components\\\\SigninForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SigninForm = () => {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState({\n    email: false,\n    password: false\n  });\n  const navigate = useNavigate();\n  const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]'); // const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case \"email\":\n        setFormValues({ ...formValues,\n          email: e.target.value\n        });\n\n        if (emailPattern.test(e.target.value)) {\n          setFormErrors({ ...formErrors,\n            email: false\n          });\n        } else {\n          setFormErrors({ ...formErrors,\n            email: true\n          });\n        }\n\n        break;\n\n      case \"password\":\n        setFormValues({ ...formValues,\n          password: e.target.value\n        });\n\n        if (pwdPattern.test(e.target.value)) {\n          setFormErrors({ ...formErrors,\n            password: false\n          });\n        } else {\n          setFormErrors({ ...formErrors,\n            password: true\n          });\n          ;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const shouldEnableSubmitButton = () => {\n    return formValues.email && formValues.password && !formErrors.email && !formErrors.password;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formValues);\n    if (!shouldEnableSubmitButton()) return; // navigate('/Student/FirstHome')\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"d-flex flex-column needs-validation\",\n    style: {\n      gap: \"1rem\"\n    },\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputLoginEmail\",\n        className: \"form-label\",\n        children: \"Email*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputLoginEmail\",\n        name: \"email\",\n        className: `form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`,\n        type: \"email\",\n        placeholder: \"john@example.com\",\n        value: formValues.email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), formValues.email && formErrors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-text text-danger fst-italic\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputLoginPassword\",\n        className: \"form-label\",\n        children: \"Password*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputLoginPassword\",\n        name: \"password\",\n        className: `form-control ${formValues.password && (formErrors.password ? \"is-invalid\" : \"is-valid\")}`,\n        type: \"password\",\n        placeholder: \"*****\",\n        value: formValues.password,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), formValues.password && formErrors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-text text-danger fst-italic\",\n        children: \"Please enter a valid password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: !shouldEnableSubmitButton(),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SigninForm, \"/nTjSO6zRlKQPvGn2Y9jJgnddL4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SigninForm;\nexport default SigninForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"sources":["C:/Users/sharanya.banerjee/Documents/HTML/React-Online-Tutor-Application-main/Online-Tutor-Application/src/components/SigninForm.jsx"],"names":["React","useState","useNavigate","SigninForm","formValues","setFormValues","email","password","formErrors","setFormErrors","navigate","emailPattern","RegExp","handleInputChange","e","target","name","value","test","pwdPattern","shouldEnableSubmitButton","handleSubmit","preventDefault","console","log","gap"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SigninForm = () => {\r\n    const [formValues, setFormValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const [formErrors, setFormErrors] = useState({\r\n        email: false,\r\n        password: false,\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]');\r\n    // const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\r\n\r\n    const handleInputChange = (e) => {\r\n        switch (e.target.name) {\r\n            case \"email\":\r\n                setFormValues({ ...formValues, email: e.target.value });\r\n                if (emailPattern.test(e.target.value)) {\r\n                    setFormErrors({ ...formErrors, email: false });\r\n                }\r\n                else {\r\n                    setFormErrors({ ...formErrors, email: true });\r\n                }\r\n                break;\r\n            case \"password\":\r\n                setFormValues({ ...formValues, password: e.target.value });\r\n                if (pwdPattern.test(e.target.value)) {\r\n                    setFormErrors({ ...formErrors, password: false });\r\n\r\n                }\r\n                else {\r\n                    setFormErrors({ ...formErrors, password: true });\r\n                    ;\r\n                }\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const shouldEnableSubmitButton = () => {\r\n        return formValues.email && formValues.password && !formErrors.email && !formErrors.password;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formValues);\r\n        if (!shouldEnableSubmitButton()) return;\r\n        // navigate('/Student/FirstHome')\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"d-flex flex-column needs-validation\" style={{ gap: \"1rem\" }} onSubmit={handleSubmit} noValidate>\r\n            <div>\r\n                <label htmlFor=\"inputLoginEmail\" className=\"form-label\">\r\n                    Email*\r\n                </label>\r\n                <input\r\n                    id=\"inputLoginEmail\"\r\n                    name=\"email\"\r\n                    className={`form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`}\r\n                    type=\"email\"\r\n                    placeholder=\"john@example.com\"\r\n                    value={formValues.email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                {formValues.email && formErrors.email && <div className=\"form-text text-danger fst-italic\">\r\n                    Please enter a valid email.\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"inputLoginPassword\" className=\"form-label\">\r\n                    Password*\r\n                </label>\r\n                <input\r\n                    id=\"inputLoginPassword\"\r\n                    name=\"password\"\r\n                    className={`form-control ${formValues.password && (formErrors.password ? \"is-invalid\" : \"is-valid\")}`}\r\n                    type=\"password\"\r\n                    placeholder=\"*****\"\r\n                    value={formValues.password}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                {formValues.password && formErrors.password && <div className=\"form-text text-danger fst-italic\">\r\n                    Please enter a valid password.\r\n                </div>}\r\n            </div>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={!shouldEnableSubmitButton()}\r\n            >\r\n                Login\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SigninForm"]},"metadata":{},"sourceType":"module"}