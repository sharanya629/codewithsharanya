[{"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\index.js":"1","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\App.js":"2","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\header.js":"3","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\login.js":"4","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\tutorProfile.js":"5","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\footer.js":"6","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\navbar.js":"7","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\tutorHome.js":"8","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\studentHome.js":"9","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\buttonLogin.js":"10","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\cards.js":"11","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\studentNotifications.js":"12","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\SignInForm.jsx":"13","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\StudentSignupForm.jsx":"14","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\SigninForm.jsx":"15","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\TutorSignupForm.jsx":"16","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\Card.jsx":"17","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\AdminPanel.jsx":"18","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\EditModal.jsx":"19","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\DeleteModal.jsx":"20","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\StudentProfile.jsx":"21","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\api\\auth.js":"22","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\utils\\helper.js":"23","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\api\\helper.js":"24","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\PrivateRoute.jsx":"25","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\contexts\\AuthProvider.jsx":"26"},{"size":571,"mtime":1732374940402,"results":"27","hashOfConfig":"28"},{"size":1341,"mtime":1732375414321,"results":"29","hashOfConfig":"28"},{"size":1603,"mtime":1730303854153,"results":"30","hashOfConfig":"28"},{"size":1900,"mtime":1731252678188,"results":"31","hashOfConfig":"28"},{"size":7038,"mtime":1731253038783,"results":"32","hashOfConfig":"28"},{"size":553,"mtime":1730303403385,"results":"33","hashOfConfig":"28"},{"size":2554,"mtime":1729696912625,"results":"34","hashOfConfig":"28"},{"size":861,"mtime":1731093683025,"results":"35","hashOfConfig":"28"},{"size":1867,"mtime":1732291882159,"results":"36","hashOfConfig":"28"},{"size":633,"mtime":1729181440214,"results":"37","hashOfConfig":"28"},{"size":10462,"mtime":1729696901026,"results":"38","hashOfConfig":"28"},{"size":1113,"mtime":1730305837397,"results":"39","hashOfConfig":"28"},{"size":3795,"mtime":1730129865006,"results":"40","hashOfConfig":"28"},{"size":6288,"mtime":1732117145157,"results":"41","hashOfConfig":"28"},{"size":3930,"mtime":1732087973720,"results":"42","hashOfConfig":"28"},{"size":9227,"mtime":1730130487955,"results":"43","hashOfConfig":"28"},{"size":594,"mtime":1730305169860,"results":"44","hashOfConfig":"28"},{"size":1215,"mtime":1730554778227,"results":"45","hashOfConfig":"28"},{"size":7914,"mtime":1730554273244,"results":"46","hashOfConfig":"28"},{"size":1063,"mtime":1732134830393,"results":"47","hashOfConfig":"28"},{"size":5070,"mtime":1731055200389,"results":"48","hashOfConfig":"28"},{"size":622,"mtime":1732373375724,"results":"49","hashOfConfig":"28"},{"size":631,"mtime":1732373181173,"results":"50","hashOfConfig":"28"},{"size":320,"mtime":1732373421477,"results":"51","hashOfConfig":"28"},{"size":338,"mtime":1732375164917,"results":"52","hashOfConfig":"28"},{"size":3345,"mtime":1732374374289,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tl0buo",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\index.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\App.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\header.js",[],[],["140","141"],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\login.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\tutorProfile.js",["142","143","144","145","146"],[],"import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from './buttonLogin';\n\nexport default function TutorProfile() {\n  const [formValues, setFormValues] = useState({\n    fullName: \"\",\n    email: \"\",\n    bio: \"\",\n    phoneNo: \"\",\n    location: \"\",\n    subject: \"\",\n    tutionFee: \"\",\n\n  });\n  const [formErrors, setFormErrors] = useState({\n    email: false,\n    phoneNo: false,\n    tutionFee: false,\n\n  });\n\n\n  const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]');\n  const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\n  const phoneNoPattern = new RegExp(\"^\\\\d{10}$\");\n  const numberPattern = new RegExp(\"^\\\\d+$\");\n\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case \"fullName\":\n        setFormValues({ ...formValues, fullName: e.target.value });\n        break;\n      case \"email\":\n        setFormValues({ ...formValues, email: e.target.value });\n        if (emailPattern.test(e.target.value)) {\n          setFormErrors({ ...formErrors, email: false });\n        } else {\n          setFormErrors({ ...formErrors, email: true });\n        }\n        break;\n      case \"bio\":\n        setFormValues({ ...formValues, bio: e.target.value });\n        break;\n      case \"phoneNo\":\n        setFormValues({ ...formValues, phoneNo: e.target.value });\n        if (phoneNoPattern.test(e.target.value)) {\n          setFormErrors({ ...formErrors, phoneNo: false });\n        } else {\n          setFormErrors({ ...formErrors, phoneNo: true });\n        }\n        break;\n      case \"location\":\n        setFormValues({ ...formValues, location: e.target.value });\n        break;\n      case \"subject\":\n        setFormValues({ ...formValues, subject: e.target.value });\n        break;\n      case \"tutionFee\":\n        setFormValues({ ...formValues, tutionFee: e.target.value });\n        if (numberPattern.test(e.target.value)) {\n          setFormErrors({ ...formErrors, tutionFee: false });\n        } else {\n          setFormErrors({ ...formErrors, tutionFee: true });\n        }\n        break;\n\n      default:\n        break\n    }\n  }\n\n  const shouldEnableSubmitButton = () => {\n    return (\n      !formErrors.email || !formErrors.phoneNo || !formErrors.tutionFee\n    );\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formValues);\n    if (!shouldEnableSubmitButton()) return;\n\n  }\n  return (\n    <>\n      <h1 className='text-center mb-5'>Update Tutor Details</h1>\n      <div className='d-flex justify-content-center'>\n\n        <form class=\"d-flex flex-column needs-validation\" style={{ gap: \"1rem\" }} onSubmit={handleSubmit} noValidate>\n          <div>\n            <label for=\"inputFullName\" class=\"form-label\">\n              Full Name*\n            </label>\n            <input\n              id=\"inputFullName\"\n              name=\"fullName\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"John Doe\"\n              value={formValues.fullName}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"inputEmail\" className=\"form-label\">\n              Email*\n            </label>\n            <input\n              id=\"inputEmail\"\n              name=\"email\"\n              className={`form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`}\n              type=\"email\"\n              placeholder=\"john@example.com\"\n              value={formValues.email}\n              onChange={handleInputChange}\n              required\n            />\n            {formValues.email && formErrors.email && <div className=\"form-text text-danger fst-italic\">\n              Please enter a valid email.\n            </div>}\n          </div>\n          <div>\n            <label for=\"inputBio\" class=\"form-label\">\n              Bio*\n            </label>\n            <textarea\n              id=\"inputBio\"\n              name=\"bio\"\n              class=\"form-control\"\n              type=\"bio\"\n              placeholder=\"I am a tutor ...\"\n              value={formValues.bio}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <div class=\"d-flex justify-content-between\" style={{ gap: \"1rem\" }}>\n            <div style={{ flex: 1 }}>\n              <label htmlFor=\"inputPhoneNo\" className=\"form-label\">\n                Phone Number*\n              </label>\n              <input\n                id=\"inputPhoneNo\"\n                name=\"phoneNo\"\n                className={`form-control ${formValues.phoneNo && (formErrors.phoneNo ? \"is-invalid\" : \"is-valid\")}`}\n                type=\"tel\"\n                placeholder=\"1234567890\"\n                value={formValues.phoneNo}\n                onChange={handleInputChange}\n                required\n              />\n              {formValues.phoneNo && formErrors.phoneNo && <div className=\"form-text text-danger fst-italic\">\n                Please enter 10 digit mobile number.\n              </div>}\n            </div>\n            <div style={{ flex: 1 }}>\n              <label for=\"inputLocation\" class=\"form-label\">\n                Location*\n              </label>\n              <input\n                id=\"inputLocation\"\n                name=\"location\"\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"City, State\"\n                value={formValues.location}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-between\" style={{ gap: \"1rem\" }}>\n            <div style={{ flex: 1 }}>\n              <label for=\"inputSubject\" class=\"form-label\">\n                Subject*\n              </label>\n              <input\n                id=\"inputSubject\"\n                name=\"subject\"\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"Maths, Science\"\n                value={formValues.subject}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div style={{ flex: 1 }}>\n              <label for=\"inputTutionFee\" class=\"form-label\">\n                Tution Fee*\n              </label>\n              <input\n                id=\"inputTutionFee\"\n                name=\"tutionFee\"\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"1000\"\n                value={formValues.tutionFee}\n                onChange={handleInputChange}\n                required\n              />\n              {formValues.tutionFee && formErrors.tutionFee && <div className=\"form-text text-danger fst-italic\">\n                Tution Fee should be a number.\n              </div>}\n            </div>\n          </div>\n\n\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={!shouldEnableSubmitButton()}\n          >\n            Update\n          </button>\n        </form>\n      </div>\n    </>\n\n  )\n}\n","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\footer.js",["147"],[],"import React from 'react';\nconst Footer = () =>{\n    return(\n        <footer className=\"bg-secondary text-center\">\n          <div className=\"container py-2\">\n            <section>\n              \n              <a className=\"btn btn-outline-dark btn-floating m-1\" href=\"\"><i className=\"bi bi-linkedin\"></i></a>\n              <a className=\"btn btn-outline-dark btn-floating m-1\" href=\"https://github.com/sharanya629\"><i className=\"bi bi-github\"></i></a>\n            </section>\n          </div>\n          \n        </footer> \n    );\n}\n\nexport default Footer;","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\navbar.js",["148","149","150"],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\tutorHome.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\studentHome.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\buttonLogin.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\cards.js",["151","152","153","154"],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\studentNotifications.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\SignInForm.jsx",["155","156","157"],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\StudentSignupForm.jsx",["158"],[],"import React, { useState } from \"react\";\r\nimport PasswordStrengthBar from \"react-password-strength-bar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst StudentSignupForm = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phoneNo: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState({\r\n    email: false,\r\n    phoneNo: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]');\r\n  // const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\r\n  const phoneNoPattern = new RegExp(\"^\\\\d{10}$\");\r\n\r\n  const handleInputChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"fullName\":\r\n        setFormValues({ ...formValues, fullName: e.target.value });\r\n        break;\r\n      case \"email\":\r\n        setFormValues({ ...formValues, email: e.target.value });\r\n        if (emailPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, email: false });\r\n        }\r\n        else {\r\n          setFormErrors({ ...formErrors, email: true });\r\n        }\r\n        break;\r\n      case \"phoneNo\":\r\n        setFormValues({ ...formValues, phoneNo: e.target.value });\r\n        if (phoneNoPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, phoneNo: false });\r\n        }\r\n        else {\r\n          setFormErrors({ ...formErrors, phoneNo: true });\r\n        }\r\n        break;\r\n      case \"password\":\r\n        setFormValues({ ...formValues, password: e.target.value });\r\n        // if (pwdPattern.test(e.target.value)) {\r\n        //   setFormErrors({ ...formErrors, password: false });\r\n\r\n        // }\r\n        // else {\r\n        //   setFormErrors({ ...formErrors, password: true });\r\n        //   ;\r\n        // }\r\n        break;\r\n      case \"confirmPassword\":\r\n        setFormValues({ ...formValues, confirmPassword: e.target.value });\r\n        setFormErrors({ ...formErrors, confirmPassword: formValues.password !== e.target.value });\r\n        break;\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const shouldEnableSubmitButton = () => {\r\n    return (\r\n      formValues.fullName &&\r\n      formValues.email &&\r\n      formValues.phoneNo &&\r\n      formValues.password &&\r\n      formValues.confirmPassword &&\r\n      formValues.password === formValues.confirmPassword\r\n    );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formValues);\r\n    if (!shouldEnableSubmitButton()) return;\r\n    navigate('/Student/FirstHome')\r\n  }\r\n\r\n  return (\r\n    <form className=\"d-flex flex-column needs-validation\" style={{ gap: \"1rem\" }} onSubmit={handleSubmit} noValidate>\r\n      <div>\r\n        <label htmlFor=\"inputFullName\" className=\"form-label\">\r\n          Full Name*\r\n        </label>\r\n        <input\r\n          id=\"inputFullName\"\r\n          name=\"fullName\"\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"John Doe\"\r\n          value={formValues.fullName}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          Email*\r\n        </label>\r\n        <input\r\n          id=\"inputEmail\"\r\n          name=\"email\"\r\n          className={`form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"email\"\r\n          placeholder=\"john@example.com\"\r\n          value={formValues.email}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.email && formErrors.email && <div className=\"form-text text-danger fst-italic\">\r\n          Please enter a valid email.\r\n        </div>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"inputPhoneNo\" className=\"form-label\">\r\n          Phone Number*\r\n        </label>\r\n        <input\r\n          id=\"inputPhoneNo\"\r\n          name=\"phoneNo\"\r\n          className={`form-control ${formValues.phoneNo && (formErrors.phoneNo ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"tel\"\r\n          placeholder=\"1234567890\"\r\n          value={formValues.phoneNo}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.phoneNo && formErrors.phoneNo && <div className=\"form-text text-danger fst-italic\">\r\n          Please enter 10 digit mobile number.\r\n        </div>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n          Password*\r\n        </label>\r\n        <input\r\n          id=\"inputPassword\"\r\n          name=\"password\"\r\n          className={`form-control ${formValues.password && (formErrors.password ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"password\"\r\n          placeholder=\"*****\"\r\n          value={formValues.password}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.password && formErrors.password && <div className=\"form-text text-danger fst-italic\">\r\n          Please enter a valid password.\r\n        </div>}\r\n      </div>\r\n      {formValues.password && !formErrors.password && <PasswordStrengthBar\r\n        password={formValues.password}\r\n        shortScoreWord=\"Too Short\"\r\n        scoreWords={[\"Fair\", \"Fair\", \"Good\", \"Strong\", \"Excellent\"]}\r\n        className={`errorDiv visible`}\r\n      />}\r\n      <div>\r\n        <label htmlFor=\"inputConfirmPassword\" className=\"form-label\">\r\n          Confirm Password*\r\n        </label>\r\n        <input\r\n          id=\"inputConfirmPassword\"\r\n          name=\"confirmPassword\"\r\n          className={`form-control ${formValues.confirmPassword && (formErrors.confirmPassword ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"password\"\r\n          placeholder=\"*****\"\r\n          value={formValues.confirmPassword}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.confirmPassword && formErrors.confirmPassword && <div className=\"form-text text-danger fst-italic\">\r\n          Passwords do not match.\r\n        </div>}\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        disabled={!shouldEnableSubmitButton()}\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentSignupForm;","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\SigninForm.jsx",["159","160"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SigninForm = () => {\r\n    const [formValues, setFormValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const [formErrors, setFormErrors] = useState({\r\n        email: false,\r\n        password: false,\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]');\r\n    // const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\r\n\r\n    const handleInputChange = (e) => {\r\n        switch (e.target.name) {\r\n            case \"email\":\r\n                setFormValues({ ...formValues, email: e.target.value });\r\n                if (emailPattern.test(e.target.value)) {\r\n                    setFormErrors({ ...formErrors, email: false });\r\n                }\r\n                else {\r\n                    setFormErrors({ ...formErrors, email: true });\r\n                }\r\n                break;\r\n            case \"password\":\r\n                setFormValues({ ...formValues, password: e.target.value });\r\n                // if (pwdPattern.test(e.target.value)) {\r\n                //     setFormErrors({ ...formErrors, password: false });\r\n\r\n                // }\r\n                // else {\r\n                //     setFormErrors({ ...formErrors, password: true });\r\n                //     ;\r\n                // }\r\n                setFormErrors({ ...formErrors, password: false });\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const shouldEnableSubmitButton = () => {\r\n        return formValues.email && formValues.password && !formErrors.email && !formErrors.password;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formValues);\r\n        if (!shouldEnableSubmitButton()) return;\r\n        // navigate('/Student/FirstHome')\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"d-flex flex-column needs-validation\" style={{ gap: \"1rem\" }} onSubmit={handleSubmit} noValidate>\r\n            <div>\r\n                <label htmlFor=\"inputLoginEmail\" className=\"form-label\">\r\n                    Email*\r\n                </label>\r\n                <input\r\n                    id=\"inputLoginEmail\"\r\n                    name=\"email\"\r\n                    className={`form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`}\r\n                    type=\"email\"\r\n                    placeholder=\"john@example.com\"\r\n                    value={formValues.email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                {formValues.email && formErrors.email && <div className=\"form-text text-danger fst-italic\">\r\n                    Please enter a valid email.\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"inputLoginPassword\" className=\"form-label\">\r\n                    Password*\r\n                </label>\r\n                <input\r\n                    id=\"inputLoginPassword\"\r\n                    name=\"password\"\r\n                    className={`form-control ${formValues.password && (formErrors.password ? \"is-invalid\" : \"is-valid\")}`}\r\n                    type=\"password\"\r\n                    placeholder=\"*****\"\r\n                    value={formValues.password}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                {formValues.password && formErrors.password && <div className=\"form-text text-danger fst-italic\">\r\n                    Please enter a valid password.\r\n                </div>}\r\n            </div>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={!shouldEnableSubmitButton()}\r\n            >\r\n                Login\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SigninForm","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\TutorSignupForm.jsx",["161","162"],[],"import React, { useState } from \"react\";\r\nimport PasswordStrengthBar from \"react-password-strength-bar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst TutorSignupForm = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    bio: \"\",\r\n    phoneNo: \"\",\r\n    location: \"\",\r\n    subject: \"\",\r\n    tutionFee: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState({\r\n    email: false,\r\n    phoneNo: false,\r\n    tutionFee: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]');\r\n  const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\r\n  const phoneNoPattern = new RegExp(\"^\\\\d{10}$\");\r\n  const numberPattern = new RegExp(\"^\\\\d+$\");\r\n\r\n  const handleInputChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"fullName\":\r\n        setFormValues({ ...formValues, fullName: e.target.value });\r\n        break;\r\n      case \"email\":\r\n        setFormValues({ ...formValues, email: e.target.value });\r\n        if (emailPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, email: false });\r\n        } else {\r\n          setFormErrors({ ...formErrors, email: true });\r\n        }\r\n        break;\r\n      case \"bio\":\r\n        setFormValues({ ...formValues, bio: e.target.value });\r\n        break;\r\n      case \"phoneNo\":\r\n        setFormValues({ ...formValues, phoneNo: e.target.value });\r\n        if (phoneNoPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, phoneNo: false });\r\n        } else {\r\n          setFormErrors({ ...formErrors, phoneNo: true });\r\n        }\r\n        break;\r\n      case \"location\":\r\n        setFormValues({ ...formValues, location: e.target.value });\r\n        break;\r\n      case \"subject\":\r\n        setFormValues({ ...formValues, subject: e.target.value });\r\n        break;\r\n      case \"tutionFee\":\r\n        setFormValues({ ...formValues, tutionFee: e.target.value });\r\n        if (numberPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, tutionFee: false });\r\n        } else {\r\n          setFormErrors({ ...formErrors, tutionFee: true });\r\n        }\r\n        break;\r\n      case \"password\":\r\n        setFormValues({ ...formValues, password: e.target.value });\r\n        if (pwdPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, password: false });\r\n\r\n        } else {\r\n          setFormErrors({ ...formErrors, password: true });\r\n          ;\r\n        }\r\n        break;\r\n      case \"confirmPassword\":\r\n        setFormValues({ ...formValues, confirmPassword: e.target.value });\r\n        setFormErrors({ ...formErrors, confirmPassword: formValues.password !== e.target.value });\r\n        break;\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const shouldEnableSubmitButton = () => {\r\n    return (\r\n      formValues.fullName &&\r\n      formValues.email &&\r\n      formValues.bio &&\r\n      formValues.phoneNo &&\r\n      formValues.location &&\r\n      formValues.subject &&\r\n      formValues.tutionFee &&\r\n      formValues.password &&\r\n      formValues.confirmPassword &&\r\n      formValues.password === formValues.confirmPassword\r\n    );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formValues);\r\n    if (!shouldEnableSubmitButton()) return;\r\n    navigate('/Tutor/FirstHome')\r\n  }\r\n\r\n  return (\r\n    <form class=\"d-flex flex-column needs-validation\" style={{ gap: \"1rem\" }} onSubmit={handleSubmit} noValidate>\r\n      <div>\r\n        <label for=\"inputFullName\" class=\"form-label\">\r\n          Full Name*\r\n        </label>\r\n        <input\r\n          id=\"inputFullName\"\r\n          name=\"fullName\"\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"John Doe\"\r\n          value={formValues.fullName}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          Email*\r\n        </label>\r\n        <input\r\n          id=\"inputEmail\"\r\n          name=\"email\"\r\n          className={`form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"email\"\r\n          placeholder=\"john@example.com\"\r\n          value={formValues.email}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.email && formErrors.email && <div className=\"form-text text-danger fst-italic\">\r\n          Please enter a valid email.\r\n        </div>}\r\n      </div>\r\n      <div>\r\n        <label for=\"inputBio\" class=\"form-label\">\r\n          Bio*\r\n        </label>\r\n        <textarea\r\n          id=\"inputBio\"\r\n          name=\"bio\"\r\n          class=\"form-control\"\r\n          type=\"bio\"\r\n          placeholder=\"I am a tutor ...\"\r\n          value={formValues.bio}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\" style={{ gap: \"1rem\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <label htmlFor=\"inputPhoneNo\" className=\"form-label\">\r\n            Phone Number*\r\n          </label>\r\n          <input\r\n            id=\"inputPhoneNo\"\r\n            name=\"phoneNo\"\r\n            className={`form-control ${formValues.phoneNo && (formErrors.phoneNo ? \"is-invalid\" : \"is-valid\")}`}\r\n            type=\"tel\"\r\n            placeholder=\"1234567890\"\r\n            value={formValues.phoneNo}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {formValues.phoneNo && formErrors.phoneNo && <div className=\"form-text text-danger fst-italic\">\r\n            Please enter 10 digit mobile number.\r\n          </div>}\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <label for=\"inputLocation\" class=\"form-label\">\r\n            Location*\r\n          </label>\r\n          <input\r\n            id=\"inputLocation\"\r\n            name=\"location\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"City, State\"\r\n            value={formValues.location}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\" style={{ gap: \"1rem\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <label for=\"inputSubject\" class=\"form-label\">\r\n            Subject*\r\n          </label>\r\n          <input\r\n            id=\"inputSubject\"\r\n            name=\"subject\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Maths, Science\"\r\n            value={formValues.subject}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <label for=\"inputTutionFee\" class=\"form-label\">\r\n            Tution Fee*\r\n          </label>\r\n          <input\r\n            id=\"inputTutionFee\"\r\n            name=\"tutionFee\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"1000\"\r\n            value={formValues.tutionFee}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {formValues.tutionFee && formErrors.tutionFee && <div className=\"form-text text-danger fst-italic\">\r\n            Tution Fee should be a number.\r\n          </div>}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n          Password*\r\n        </label>\r\n        <input\r\n          id=\"inputPassword\"\r\n          name=\"password\"\r\n          className={`form-control ${formValues.password && (formErrors.password ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"password\"\r\n          placeholder=\"*****\"\r\n          value={formValues.password}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.password && formErrors.password && <div className=\"form-text text-danger fst-italic\">\r\n          Please enter a valid password.\r\n        </div>}\r\n      </div>\r\n      {formValues.password && !formErrors.password && <PasswordStrengthBar\r\n        password={formValues.password}\r\n        shortScoreWord=\"Too Short\"\r\n        scoreWords={[\"Fair\", \"Fair\", \"Good\", \"Strong\", \"Excellent\"]}\r\n        className=\"errorDiv\"\r\n      />}\r\n      <div>\r\n        <label htmlFor=\"inputConfirmPassword\" className=\"form-label\">\r\n          Confirm Password*\r\n        </label>\r\n        <input\r\n          id=\"inputConfirmPassword\"\r\n          name=\"confirmPassword\"\r\n          className={`form-control ${formValues.confirmPassword && (formErrors.confirmPassword ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"password\"\r\n          placeholder=\"*****\"\r\n          value={formValues.confirmPassword}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.confirmPassword && formErrors.confirmPassword && <div className=\"form-text text-danger fst-italic\">\r\n          Passwords do not match.\r\n        </div>}\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        disabled={!shouldEnableSubmitButton()}\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TutorSignupForm;","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\Card.jsx",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\AdminPanel.jsx",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\EditModal.jsx",["163","164"],[],"import { useState } from \"react\";\r\n\r\nconst EditModal = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    bio: \"\",\r\n    phoneNo: \"\",\r\n    location: \"\",\r\n    subject: \"\",\r\n    tutionFee: \"\",\r\n    \r\n  });\r\n  const [formErrors, setFormErrors] = useState({\r\n    email: false,\r\n    phoneNo: false,\r\n    tutionFee: false,\r\n    \r\n  });\r\n  \r\n\r\n  const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]');\r\n  const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\r\n  const phoneNoPattern = new RegExp(\"^\\\\d{10}$\");\r\n  const numberPattern = new RegExp(\"^\\\\d+$\");\r\n\r\n  const handleInputChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"fullName\":\r\n        setFormValues({ ...formValues, fullName: e.target.value });\r\n        break;\r\n      case \"email\":\r\n        setFormValues({ ...formValues, email: e.target.value });\r\n        if (emailPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, email: false });\r\n        } else {\r\n          setFormErrors({ ...formErrors, email: true });\r\n        }\r\n        break;\r\n      case \"bio\":\r\n        setFormValues({ ...formValues, bio: e.target.value });\r\n        break;\r\n      case \"phoneNo\":\r\n        setFormValues({ ...formValues, phoneNo: e.target.value });\r\n        if (phoneNoPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, phoneNo: false });\r\n        } else {\r\n          setFormErrors({ ...formErrors, phoneNo: true });\r\n        }\r\n        break;\r\n      case \"location\":\r\n        setFormValues({ ...formValues, location: e.target.value });\r\n        break;\r\n      case \"subject\":\r\n        setFormValues({ ...formValues, subject: e.target.value });\r\n        break;\r\n      case \"tutionFee\":\r\n        setFormValues({ ...formValues, tutionFee: e.target.value });\r\n        if (numberPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, tutionFee: false });\r\n        } else {\r\n          setFormErrors({ ...formErrors, tutionFee: true });\r\n        }\r\n        break;\r\n      case \"password\":\r\n        setFormValues({ ...formValues, password: e.target.value });\r\n        if (pwdPattern.test(e.target.value)) {\r\n          setFormErrors({ ...formErrors, password: false });\r\n\r\n        } else {\r\n          setFormErrors({ ...formErrors, password: true });\r\n          ;\r\n        }\r\n        break;\r\n      case \"confirmPassword\":\r\n        setFormValues({ ...formValues, confirmPassword: e.target.value });\r\n        setFormErrors({ ...formErrors, confirmPassword: formValues.password !== e.target.value });\r\n        break;\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const shouldEnableSubmitButton = () => {\r\n    return (\r\n      !formErrors.email || !formErrors.phoneNo || !formErrors.tutionFee\r\n    );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formValues);\r\n    if (!shouldEnableSubmitButton()) return;\r\n    \r\n  }\r\n  return (\r\n    <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-labelledby=\"editModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Update User Details</h1>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n          <form class=\"d-flex flex-column needs-validation\" style={{ gap: \"1rem\" }} onSubmit={handleSubmit} noValidate>\r\n      <div>\r\n        <label for=\"inputFullName\" class=\"form-label\">\r\n          Full Name*\r\n        </label>\r\n        <input\r\n          id=\"inputFullName\"\r\n          name=\"fullName\"\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"John Doe\"\r\n          value={formValues.fullName}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          Email*\r\n        </label>\r\n        <input\r\n          id=\"inputEmail\"\r\n          name=\"email\"\r\n          className={`form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`}\r\n          type=\"email\"\r\n          placeholder=\"john@example.com\"\r\n          value={formValues.email}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        {formValues.email && formErrors.email && <div className=\"form-text text-danger fst-italic\">\r\n          Please enter a valid email.\r\n        </div>}\r\n      </div>\r\n      <div>\r\n        <label for=\"inputBio\" class=\"form-label\">\r\n          Bio*\r\n        </label>\r\n        <textarea\r\n          id=\"inputBio\"\r\n          name=\"bio\"\r\n          class=\"form-control\"\r\n          type=\"bio\"\r\n          placeholder=\"I am a tutor ...\"\r\n          value={formValues.bio}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\" style={{ gap: \"1rem\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <label htmlFor=\"inputPhoneNo\" className=\"form-label\">\r\n            Phone Number*\r\n          </label>\r\n          <input\r\n            id=\"inputPhoneNo\"\r\n            name=\"phoneNo\"\r\n            className={`form-control ${formValues.phoneNo && (formErrors.phoneNo ? \"is-invalid\" : \"is-valid\")}`}\r\n            type=\"tel\"\r\n            placeholder=\"1234567890\"\r\n            value={formValues.phoneNo}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {formValues.phoneNo && formErrors.phoneNo && <div className=\"form-text text-danger fst-italic\">\r\n            Please enter 10 digit mobile number.\r\n          </div>}\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <label for=\"inputLocation\" class=\"form-label\">\r\n            Location*\r\n          </label>\r\n          <input\r\n            id=\"inputLocation\"\r\n            name=\"location\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"City, State\"\r\n            value={formValues.location}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\" style={{ gap: \"1rem\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <label for=\"inputSubject\" class=\"form-label\">\r\n            Subject*\r\n          </label>\r\n          <input\r\n            id=\"inputSubject\"\r\n            name=\"subject\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Maths, Science\"\r\n            value={formValues.subject}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <label for=\"inputTutionFee\" class=\"form-label\">\r\n            Tution Fee*\r\n          </label>\r\n          <input\r\n            id=\"inputTutionFee\"\r\n            name=\"tutionFee\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"1000\"\r\n            value={formValues.tutionFee}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {formValues.tutionFee && formErrors.tutionFee && <div className=\"form-text text-danger fst-italic\">\r\n            Tution Fee should be a number.\r\n          </div>}\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n      \r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        disabled={!shouldEnableSubmitButton()}\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditModal;","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\DeleteModal.jsx",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\StudentProfile.jsx",["165","166","167"],[],"import { useState } from \"react\";\r\n\r\nconst StudentProfile = () => {\r\n    const [formValues, setFormValues] = useState({\r\n        fullName: \"\",\r\n        email: \"\",\r\n        phoneNo: \"\",\r\n\r\n    });\r\n    const [formErrors, setFormErrors] = useState({\r\n        email: false,\r\n        phoneNo: false,\r\n\r\n    });\r\n\r\n\r\n    const emailPattern = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]');\r\n    const pwdPattern = new RegExp(\"[a-z0-9A-Z][A-Za-z\\d@$!%*?&]{6,}\");\r\n    const phoneNoPattern = new RegExp(\"^\\\\d{10}$\");\r\n\r\n    const handleInputChange = (e) => {\r\n        switch (e.target.name) {\r\n            case \"fullName\":\r\n                setFormValues({ ...formValues, fullName: e.target.value });\r\n                break;\r\n            case \"email\":\r\n                setFormValues({ ...formValues, email: e.target.value });\r\n                if (emailPattern.test(e.target.value)) {\r\n                    setFormErrors({ ...formErrors, email: false });\r\n                }\r\n                else {\r\n                    setFormErrors({ ...formErrors, email: true });\r\n                }\r\n                break;\r\n            case \"phoneNo\":\r\n                setFormValues({ ...formValues, phoneNo: e.target.value });\r\n                if (phoneNoPattern.test(e.target.value)) {\r\n                    setFormErrors({ ...formErrors, phoneNo: false });\r\n                }\r\n                else {\r\n                    setFormErrors({ ...formErrors, phoneNo: true });\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const shouldEnableSubmitButton = () => {\r\n        return (\r\n            !formErrors.email || !formErrors.phoneNo\r\n        );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formValues);\r\n        if (!shouldEnableSubmitButton()) return;\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <h1 className='text-center mb-5'>Update Student Details</h1>\r\n            <div className='d-flex justify-content-center'>\r\n                <form className=\"d-flex flex-column needs-validation\" style={{ gap: \"1rem\" }} onSubmit={handleSubmit} noValidate>\r\n                    <div>\r\n                        <label htmlFor=\"inputFullName\" className=\"form-label\">\r\n                            Full Name*\r\n                        </label>\r\n                        <input\r\n                            id=\"inputFullName\"\r\n                            name=\"fullName\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"John Doe\"\r\n                            value={formValues.fullName}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n                            Email*\r\n                        </label>\r\n                        <input\r\n                            id=\"inputEmail\"\r\n                            name=\"email\"\r\n                            className={`form-control ${formValues.email && (formErrors.email ? \"is-invalid\" : \"is-valid\")}`}\r\n                            type=\"email\"\r\n                            placeholder=\"john@example.com\"\r\n                            value={formValues.email}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        {formValues.email && formErrors.email && <div className=\"form-text text-danger fst-italic\">\r\n                            Please enter a valid email.\r\n                        </div>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"inputPhoneNo\" className=\"form-label\">\r\n                            Phone Number*\r\n                        </label>\r\n                        <input\r\n                            id=\"inputPhoneNo\"\r\n                            name=\"phoneNo\"\r\n                            className={`form-control ${formValues.phoneNo && (formErrors.phoneNo ? \"is-invalid\" : \"is-valid\")}`}\r\n                            type=\"tel\"\r\n                            placeholder=\"1234567890\"\r\n                            value={formValues.phoneNo}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        {formValues.phoneNo && formErrors.phoneNo && <div className=\"form-text text-danger fst-italic\">\r\n                            Please enter 10 digit mobile number.\r\n                        </div>}\r\n                    </div>\r\n\r\n\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={!shouldEnableSubmitButton()}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentProfile;","C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\api\\auth.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\utils\\helper.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\api\\helper.js",[],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\components\\PrivateRoute.jsx",["168"],[],"C:\\Users\\sharanya.banerjee\\Documents\\HTML\\React-Online-Tutor-Application-main\\Online-Tutor-Application\\src\\contexts\\AuthProvider.jsx",["169"],[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"174","severity":1,"message":"178","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":25,"column":52,"nodeType":"181","messageId":"182","endLine":25,"endColumn":53,"suggestions":"183"},{"ruleId":"174","severity":1,"message":"184","line":26,"column":9,"nodeType":"176","messageId":"177","endLine":26,"endColumn":19},{"ruleId":"179","severity":1,"message":"185","line":26,"column":52,"nodeType":"181","messageId":"182","endLine":26,"endColumn":53,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":8,"column":15,"nodeType":"189","endLine":8,"endColumn":76},{"ruleId":"174","severity":1,"message":"190","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"191","line":13,"column":12,"nodeType":"176","messageId":"177","endLine":13,"endColumn":23},{"ruleId":"174","severity":1,"message":"192","line":34,"column":11,"nodeType":"176","messageId":"177","endLine":34,"endColumn":18},{"ruleId":"174","severity":1,"message":"193","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":16},{"ruleId":"174","severity":1,"message":"178","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":14},{"ruleId":"174","severity":1,"message":"194","line":15,"column":7,"nodeType":"176","messageId":"177","endLine":15,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":55,"column":36,"nodeType":"197","messageId":"198","endLine":55,"endColumn":38},{"ruleId":"174","severity":1,"message":"199","line":13,"column":11,"nodeType":"176","messageId":"177","endLine":13,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":16,"column":54,"nodeType":"181","messageId":"182","endLine":16,"endColumn":55,"suggestions":"200"},{"ruleId":"179","severity":1,"message":"185","line":17,"column":54,"nodeType":"181","messageId":"182","endLine":17,"endColumn":55,"suggestions":"201"},{"ruleId":"179","severity":1,"message":"180","line":21,"column":52,"nodeType":"181","messageId":"182","endLine":21,"endColumn":53,"suggestions":"202"},{"ruleId":"174","severity":1,"message":"199","line":13,"column":11,"nodeType":"176","messageId":"177","endLine":13,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":16,"column":54,"nodeType":"181","messageId":"182","endLine":16,"endColumn":55,"suggestions":"203"},{"ruleId":"179","severity":1,"message":"180","line":26,"column":52,"nodeType":"181","messageId":"182","endLine":26,"endColumn":53,"suggestions":"204"},{"ruleId":"179","severity":1,"message":"185","line":27,"column":52,"nodeType":"181","messageId":"182","endLine":27,"endColumn":53,"suggestions":"205"},{"ruleId":"179","severity":1,"message":"180","line":22,"column":52,"nodeType":"181","messageId":"182","endLine":22,"endColumn":53,"suggestions":"206"},{"ruleId":"179","severity":1,"message":"185","line":23,"column":52,"nodeType":"181","messageId":"182","endLine":23,"endColumn":53,"suggestions":"207"},{"ruleId":"179","severity":1,"message":"180","line":17,"column":54,"nodeType":"181","messageId":"182","endLine":17,"endColumn":55,"suggestions":"208"},{"ruleId":"174","severity":1,"message":"184","line":18,"column":11,"nodeType":"176","messageId":"177","endLine":18,"endColumn":21},{"ruleId":"179","severity":1,"message":"185","line":18,"column":54,"nodeType":"181","messageId":"182","endLine":18,"endColumn":55,"suggestions":"209"},{"ruleId":"174","severity":1,"message":"210","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":21,"column":6,"nodeType":"213","endLine":21,"endColumn":8,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["217","218"],"'pwdPattern' is assigned a value but never used.","Unnecessary escape character: \\d.",["219","220"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Option' is defined but never used.","'searchValue' is assigned a value but never used.","'onFetch' is assigned a value but never used.","'MDBBtn' is defined but never used.","'starRating' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'navigate' is assigned a value but never used.",["221","222"],["223","224"],["225","226"],["227","228"],["229","230"],["231","232"],["233","234"],["235","236"],["237","238"],["239","240"],"'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["241"],"no-global-assign","no-unsafe-negation",{"messageId":"242","fix":"243","desc":"244"},{"messageId":"245","fix":"246","desc":"247"},{"messageId":"242","fix":"248","desc":"244"},{"messageId":"245","fix":"249","desc":"247"},{"messageId":"242","fix":"250","desc":"244"},{"messageId":"245","fix":"251","desc":"247"},{"messageId":"242","fix":"252","desc":"244"},{"messageId":"245","fix":"253","desc":"247"},{"messageId":"242","fix":"254","desc":"244"},{"messageId":"245","fix":"255","desc":"247"},{"messageId":"242","fix":"256","desc":"244"},{"messageId":"245","fix":"257","desc":"247"},{"messageId":"242","fix":"258","desc":"244"},{"messageId":"245","fix":"259","desc":"247"},{"messageId":"242","fix":"260","desc":"244"},{"messageId":"245","fix":"261","desc":"247"},{"messageId":"242","fix":"262","desc":"244"},{"messageId":"245","fix":"263","desc":"247"},{"messageId":"242","fix":"264","desc":"244"},{"messageId":"245","fix":"265","desc":"247"},{"messageId":"242","fix":"266","desc":"244"},{"messageId":"245","fix":"267","desc":"247"},{"messageId":"242","fix":"268","desc":"244"},{"messageId":"245","fix":"269","desc":"247"},{"desc":"270","fix":"271"},"removeEscape",{"range":"272","text":"273"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"274","text":"275"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"276","text":"273"},{"range":"277","text":"275"},{"range":"278","text":"273"},{"range":"279","text":"275"},{"range":"280","text":"273"},{"range":"281","text":"275"},{"range":"282","text":"273"},{"range":"283","text":"275"},{"range":"284","text":"273"},{"range":"285","text":"275"},{"range":"286","text":"273"},{"range":"287","text":"275"},{"range":"288","text":"273"},{"range":"289","text":"275"},{"range":"290","text":"273"},{"range":"291","text":"275"},{"range":"292","text":"273"},{"range":"293","text":"275"},{"range":"294","text":"273"},{"range":"295","text":"275"},{"range":"296","text":"273"},{"range":"297","text":"275"},"Update the dependencies array to be: [navigate]",{"range":"298","text":"299"},[509,510],"",[509,509],"\\",[571,572],[571,571],[428,429],[428,428],[493,494],[493,493],[583,584],[583,583],[428,429],[428,428],[675,676],[675,675],[738,739],[738,738],[434,435],[434,434],[497,498],[497,497],[365,366],[365,365],[430,431],[430,430],[880,882],"[navigate]"]